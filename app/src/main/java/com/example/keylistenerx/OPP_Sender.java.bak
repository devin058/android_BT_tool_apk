package com.example.keylistenerx;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;
import android.content.Context;
import android.content.pm.PackageManager;
import android.os.Environment;
import android.util.Log;

import androidx.core.app.ActivityCompat;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.UUID;

public class OPP_Sender {
    private UUID opp_uuid = UUID.fromString("00001105-0000-1000-8000-00805f9b34fb");
    private Context context;
    @SuppressLint("MissingPermission")
    public OPP_Sender(Context con) {
        Log.e("xiaohan","please make sure the peer device is bonded");
        Log.e("xiaohan","please make sure the peer device is connectable");
        Log.e("xiaohan","please make sure the peer device support OPP");
        Log.e("xiaohan","please make sure the file is accessible");
        context = con;
    }

    public void send(String sppSendFilePath) {
        Log.e("xiaohan", "send "+sppSendFilePath);
        BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (ActivityCompat.checkSelfPermission(context, android.Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED &&
                ActivityCompat.checkSelfPermission(context, android.Manifest.permission.MANAGE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED &&
                ActivityCompat.checkSelfPermission(context, android.Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED &&
                ActivityCompat.checkSelfPermission(context, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
            Log.e("xiaohan", "cannot got android.Manifest.permission.BLUETOOTH_CONNECT");
            ActivityCompat.requestPermissions((Activity) this.context, new String[]{android.Manifest.permission.BLUETOOTH_CONNECT,android.Manifest.permission.MANAGE_EXTERNAL_STORAGE}, 111);
            return;
        }
        for (BluetoothDevice device : bluetoothAdapter.getBondedDevices()) {
            try {
                BluetoothSocket socket = device.createRfcommSocketToServiceRecord(opp_uuid);
                socket.connect();
                Thread.sleep(3000);  // 添加延迟等待设备连接
                if (!socket.isConnected()) {
                    Log.e("xiaohan", "cannot connect to "+device.getAddress() + " " +device.getName());
                    continue;
                }
                File fileToSend = new File(Environment.getExternalStorageDirectory(), sppSendFilePath);
                byte[] buffer = new byte[(int) fileToSend.length()];
                Log.e("xiaohan", "Send = "+fileToSend+" to "+device.getName() + " size = "+ fileToSend.length());
                FileInputStream fis = new FileInputStream(fileToSend);
                fis.read(buffer);
                OutputStream outputStream = socket.getOutputStream();
                if (outputStream != null && socket.isConnected()) {
                    outputStream.write(buffer);
                    outputStream.flush();
                    outputStream.close();
                } else {
                    Log.e("xiaohan", "Output stream is null or socket is closed");
                }
                fis.close();
                socket.close();
            } catch (IOException e) {
                Log.e("xiaohan", "IOException : maybe device "+device.getName()+" do not support OPP or /storage/emulated/0/" + sppSendFilePath + " is not exist");
                e.printStackTrace();
            } catch (InterruptedException e) {
                Log.e("xiaohan", "InterruptedException : maybe device "+device.getName()+" do not support OPP or /storage/emulated/0/" + sppSendFilePath + " is not exist");
                throw new RuntimeException(e);
            }
        }
    }
}
